#include<bits/stdc++.h>
using namespace std;

class Hash{
    int Bucket;
    list<int>*table;
    public:
    Hash(int v);
    void insert(int key);
    void deleted(int key);
    void display();
    int fun(int key){
        return key%Bucket;
    }
};

Hash::Hash(int v){
    Bucket=v;
    table=new list<int>[Bucket];
}

void Hash::insert(int key){
    int index=fun(key);
    table[index].push_back(key);
}

void Hash::deleted(int key){
    int index=fun(key);
    list<int>::iterator i;
    for(i=table[index].begin();i!=table[index].end(); i++){
        if(*i==key)
        break;
        
    }
    if(i!=table[index].end())
        table[index].erase(i);
}

void Hash::display(){
    for(int i=0;i<Bucket;i++){
        cout<<i;
        for(auto it:table[i])
            cout<<"->"<<it<<endl;
    }
}
int main(){
    
    int a[]={12,23,34,54,21,89};
    //int 6;
    Hash h(8);
    for(int i=0; i<6; i++){
        h.insert(a[i]);
    }
    h.deleted(23);
    h.display();
    return 0;
}
